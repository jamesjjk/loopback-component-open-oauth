<!DOCTYPE html>
<html lang="en">

<head>
    <title>Sign in | Identity Management</title>
    <link rel="stylesheet" href="/stylesheets/app.css">
    <link rel="stylesheet" href="/stylesheets/providers.css">
    <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto:400,100,100italic,400italic,700,700italic|Raleway:400,100,600,300">
</head>

<body>
    <div class="authform blur-transition">
        <form method="POST" class="panel">
            <!-- adding a class of error to this paragraph will add error styling-->
            {{#if error=='email must be unique' }}
            <p class="error">A user with the same email address has already registered using a different provider. Try one of these:</p>
            {{/if}}{{else if ( error)}} {{#if request.response_mode}}
            <input type="hidden" name="response_mode" value="{{request.response_mode}}">{{/if}}
            <input type="hidden" name="response_type" value="{{request.response_type}}">
            <input type="hidden" name="client_id" value="{{request.client_id}}">
            <input type="hidden" name="redirect_uri" value="{{request.redirect_uri}}">
            <input type="hidden" name="max_age" value="{{request.max_age}}">
            <input type="hidden" name="scope" value="{{request.scope}}">
            <input type="hidden" name="state" value="{{request.state}}">
            <input type="hidden" name="nonce" value="{{request.nonce}}">
            <hr class="textsep signinwith">{{var formBasedProviders = [];}}{{var formFieldData = {};}}{{var providerNames = {};}}{{var externalProviders = [];}}{{var providerIDs = Object.keys(providers);}} {{#if providerIDs.length}}
            <ul class="providers">
                {{#each providerIDs as |provider|}}{{providerNames[provider] = providerInfo[provider].name;}}{{if ( !providerInfo[provider].fields)}} {{else}} {{formBasedProviders.push(provider);}}{{formFieldData[provider] = providerInfo[provider].fields;}}{{/if}} {{/each}}
            </ul>
            {{/if}} {{#if formBasedProviders.length> 0}} {{var selectedProvider = (request && request.provider) || formBasedProviders[0];}} {{#if externalProviders.length}}
            <hr class="textsep or"> {{/if}}
            <div class="form-provider-name">{{providerInfo[selectedProvider].name}}</div>
            {{#if formBasedProviders.length> 1}}
            <ul class="providers form-providers">
                {{#each formBasedProviders as |provider|}}
                <li>
                    <a href="javascript:void(0)" title="{{providerInfo[provider].name}}" data-provider="{{provider}}" class="provider protocol-{{providerInfo[provider].protocol}} {{provider}}{{(provider === selectedProvider ? ' selected-provider' : '')}}"></a>
                </li>
                {{/each}}
            </ul>
            {{/if}}
            <input type="hidden" name="provider" value="{{selectedProvider}}"> {{#if formError}}
            <p class="error">{{formError}}</p>
            {{/if}}
            <div class="form-fields">
                {{#each providerInfo[selectedProvider].fields as |field|}}
                <input type="{{field.type}}" name="{{field.name}}" placeholder="{{field.placeholder || (field.name.charAt(0).toUpperCase()}}{{field.name.substring(1))}}">{{/each}}
            </div>{{!-- input(type='text', name='email', placeholder='Email')--}} {{!-- input(type='password', name='password', placeholder='Password')--}}
            <input type="submit" value="Sign in" class="callout full">{{if ( ~providerIDs.indexOf('password'))}}{{/if}}
        </form>
    </div>
    <div hidden class="screen">
        <div class="loader">
            <svg class="circular">
                <circle cx="{{28}}" cy="{{28}}" r="{{20}}" fill="none" stroke-width="{{5}}" stroke-miterlimit="{{10}}" class="path"></circle>
            </svg>
        </div>
    </div>
    {{#if formBasedProviders.length> 1}}
    <script>
    (function() {
        <!-- TODO: Fix unsupported jade inline javascript -->
        var formFieldData = !{
            JSON.stringify(formFieldData)
        };
        <!-- TODO: Fix unsupported jade inline javascript -->
        var providerIDs = !{
            JSON.stringify(providerNames)
        };
        var providerTag = document.querySelector('input[name="provider"]');
        var formProviderNametag = document.querySelector('.form-provider-name');
        var formFieldContainer = document.querySelector('.form-fields');
        var formProviderLinks = document.querySelectorAll('.form-providers a');
        var registerMessage = document.querySelector('.register-message');
        var forgotPassword = document.querySelector('.forgot-password');
        var screenElem = document.querySelector('.screen');
        var form = document.querySelector('form');
        var formWrapper = document.querySelector('.authform');
        form.addEventListener('submit', function() {
            formWrapper.classList.add('blur');
            screenElem.removeAttribute('hidden');
        });

        function changeProvider() {
            formFieldContainer.innerHTML = '';
            formFieldContainer.appendChild(this.providerFields.cloneNode(true));
            for (var i = 0; i < formProviderLinks.length; i++) {
                if (formProviderLinks[i].provider !== this.provider) {
                    formProviderLinks[i].classList.remove('selected-provider');
                }
            }
            formProviderNametag.textContent = providerIDs[this.provider];
            providerTag.value = this.provider;
            if (registerMessage) {
                registerMessage.style.display = this.provider === 'password' ? '' : 'none';
            }
            if (forgotPassword) {
                forgotPassword.style.display = this.provider === 'password' ? '' : 'none';
            }
            this.classList.add('selected-provider');
        }
        var fragment, fields, input;
        for (var i = 0; i < formProviderLinks.length; i++) {
            // We could use dataset, but unfortunately there is the dreaded IE10
            formProviderLinks[i].provider = formProviderLinks[i].getAttribute('data-provider');
            fragment = document.createDocumentFragment();
            fields = formFieldData[formProviderLinks[i].provider];
            for (var j = 0; j < fields.length; j++) {
                input = document.createElement('input');
                input.name = fields[j].name
                if (fields[j].type) {
                    input.type = fields[j].type;
                }
                if (fields[j].placeholder) {
                    input.placeholder = fields[j].placeholder;
                } else {
                    input.placeholder = fields[j].name.charAt(0).toUpperCase() + fields[j].name.substring(1);
                }
                fragment.appendChild(input);
            }
            formProviderLinks[i].providerFields = fragment;
            formProviderLinks[i].addEventListener('click', changeProvider);
        }
    })();

    </script>
    {{/if}}
</body>

</html>

